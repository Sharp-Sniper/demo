/**
 * 冒泡排序
 */
package com.pokors.sort.bubble;

// 通常来说，冒泡排序有三种写法：
// 一边比较一边向后两两交换，将最大值 / 最小值冒泡到最后一位；
// 经过优化的写法：使用一个变量记录当前轮次的比较是否发生过交换，如果没有发生交换表示已经有序，不再继续排序；
// 进一步优化的写法：除了使用变量记录当前轮次是否发生交换外，再使用一个变量记录上次发生交换的位置，下一轮排序时到达上次交换的位置就停止比较。

// 空间复杂度为 O(1) ，时间复杂度为 O(n^2) ，第二种、第三种冒泡排序由于经过优化，最好的情况下只需要 O(n) 的时间复杂度。
// 最好情况：在数组已经有序的情况下，只需遍历一次，由于没有发生交换，排序结束。
// 最差情况：数组顺序为逆序，每次比较都会发生交换。
// 但优化后的冒泡排序平均时间复杂度仍然是 O(n^2) ，所以这些优化对算法的性能并没有质的提升。正如 Donald E. Knuth（19741974 年图灵奖获得者）所言：“冒泡排序法除了它迷人的名字和导致了某些有趣的理论问题这一事实外，似乎没有什么值得推荐的。”
